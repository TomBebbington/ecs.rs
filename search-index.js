var searchIndex = {};
searchIndex['eccles'] = {"items":[[0,"","eccles","An Entity Component Processor implemented in Rust\n \nBased on concepts detailed at [this wiki](http://entity-processors.wikidot.com/)"],[1,"Bag","","Collection type a bit like Vec that avoids generics yet is still type-safe\n \nIt has a vector of bytes and allocates values to it on-the-fly.\nIt stores the vtable of the type so it can drop values when they are removed.\n \n# Examples"],[1,"EntityRef","","An immutable reference into a world with an entity\nThis is pretty much equivalent to a MetaEntity in most ECS implementations"],[11,"components","","The components of the world the entity resides in",0],[11,"entities","","The entities of the world the entity resides in",0],[11,"entity","","The entity, a UUID",0],[1,"EntityRefMut","","An immutable reference into a world with an entity"],[11,"components","","The components of the world the entity resides in",1],[11,"entities","","The entities of the world the entity resides in",1],[11,"entity","","The entity, a UUID",1],[1,"EntityManager","","Manages entity allocation and deletion"],[1,"ComponentType","","Identifies the type of component"],[1,"ComponentManager","","Attaches component types to the component lists"],[1,"World","","Encapsulates the entities, the components they consist of and\nthe processors that operate upon them"],[11,"components","","Manages the data",2],[11,"processors","","Manages the processors of the data",2],[11,"entities","","Manages the unique identifiers of bits of data",2],[1,"ProcessorManager","","Encapsulates processors and their categories"],[1,"IntervalProcessor","","A processor that runs every interval instead of every tick."],[11,"interval","","The interval, in seconds",3],[11,"since_last","","The number of seconds since the last update",3],[11,"processor","","The actual processor to run",3],[10,"index","","",4],[10,"index_mut","","",4],[10,"from_iter","","",4],[10,"new","","Make a new bag of items",4],[10,"with_capacity","","Make a bag of items allocated to allow capacity of `T` before\nrequiring re-allocation.",4],[10,"from_elem","","Construct a bag by filling it with `length` copies of `value`",4],[10,"get","","Get the copy of the value at a given index",4],[10,"capacity","","Get the maximum number of items this bag can hold before reallocating",4],[10,"len","","Get the number of items in this bag",4],[10,"is_empty","","Check if this bag is empty",4],[10,"clear","","Clear this bag of all the items in it",4],[10,"as_slice","","Return this bag as a slice",4],[10,"add","","Add a component to the bag",4],[10,"into_vec","","Convert the  bag into a vector of items",4],[10,"drop","","",4],[10,"into_bag","collections::vec","",5],[10,"into_bag","alloc::boxed","",6],[10,"hash","eccles","",7],[10,"eq","","",7],[10,"ne","","",7],[10,"of","","Get the component type of a given component",7],[10,"index","","",8],[10,"index_mut","","",8],[10,"new","","Create a new component manager",8],[10,"with_capacity","","Create a new component manager",8],[10,"has_id","","Check if the components has a component attached to the entity",8],[10,"has","","Check if the components has a component attached to the entity",8],[10,"add","","Add a component attached to the entity",8],[10,"set","","Set the component in the components list, and attach it to the entity",8],[10,"borrow","","Borrow immutably the component from the components list attached to this entity",8],[10,"borrow_mut","","Borrow mutably the component from the components list attached to this entity",8],[10,"get_list","","Get the components list for a component",8],[10,"get","","Clone the component from the components list attached to this entity",8],[10,"remove","","Remove the component in the components list, and attach it to the entity",8],[10,"clear_entity","","Remove all the components in the component lists attached to the entity",8],[10,"clear","","Clear all the components in a component list",8],[10,"register","","Register a component",8],[10,"new","","Create a new entity manager",9],[10,"create","","Create a new entity",9],[10,"enable","","Enable an entity to be processed",9],[10,"disable","","Disable an entity from being processed",9],[10,"is_active","","Check if an entity is active",9],[10,"exists","","Check if an entity exists",9],[10,"remove","","Delete an entity",9],[10,"iter","","Iterate through all the active entities",9],[10,"is_active","","Check if the entity is active",0],[10,"get","","Clone the component of the given type attached to this entity",0],[10,"has","","Check if any components of the given type are attached to this entity",0],[10,"has_id","","Check if any components of the given type are attached to this entity",0],[10,"borrow","","Borrow the component of the given type attached to this entity",0],[10,"is_active","","Check if the entity is active",1],[10,"enable","","Enable the entity",1],[10,"disable","","Disable the entity",1],[10,"add","","Add the component to the components list, and attach it to the entity",1],[10,"add_default","","Add the component to the components list, and attach it to the entity",1],[10,"get","","Clone the component of the given type attached to this entity",1],[10,"has","","Check if any components of the given type are attached to this entity",1],[10,"set","","Set the component in the components list, and attach it to the entity",1],[10,"borrow","","Borrow immutably the component from the components list attached to this entity",1],[10,"borrow_mut","","Borrow mutably the component from the components list attached to this entity",1],[10,"remove","","Remove the component for the given entity",1],[10,"delete","","Delete the entity",1],[10,"new","","Makes a new interval processor from the given processor and interval",3],[10,"run","","",3],[10,"run_all","","",3],[10,"new","","Create a new processor manager",10],[10,"update","","Update a processor",10],[10,"add","","Add a processor with an aspect into the world",10],[10,"iter","","Iterate through the systems and their descriptors immutably",10],[10,"iter_mut","","Iterate through the systems and their descriptors mutably",10],[10,"new","","Creates a new world",2],[10,"with_capacity","","Creates a new world",2],[10,"new_entity","","Creates an entity in the world and returns it and the world",2],[10,"build_entity","","Build an entity and enable it",2],[10,"build_entities","","Build a certain number of entities and enable them",2],[10,"remove_entity","","Removes an entity from the world",2],[10,"get_entity","","Get an immutable reference to an entity in the world",2],[10,"get_entity_mut","","Get a mutable reference to an entity in the world",2],[10,"update","","Update all the processors with a delta, in seconds",2],[10,"begin_loop","","Begin a loop of updating the world",2],[10,"register_component","","Allocate a component list for the given type of component",2],[10,"register_processor","","Add a processor to the world",2],[10,"entities","","Iterate through the entities",2],[4,"Entity","","A unique ID that tags each game object as a separate item\nImplementations typically use a plain integer for this, as is used here"],[6,"IntoBag","","Provides efficient conversion into a bag"],[9,"into_bag","","Convert this value into a bag",11],[6,"EntityBuilder","","A closure capably of building an entity"],[9,"build","","Build a single entity and return it",12],[10,"build_some","","Build multiple entities",12],[6,"Component","","All the data for one aspect of the object"],[6,"Processor","","Processes components of entities\nWith each Processor running continuously as if it has a private internal thread,\nperforming actions on every Entity that possesses a Component of a matching\naspect to the Processor"],[9,"run","","Process a single entity with a delta in seconds",13],[10,"run_all","","Process entities with a delta in seconds",13],[6,"Aspect","","An Aspect is used by processors as a matcher against entities,\nto check if a processor is interested in an entity"],[9,"check","","Check if the entity meets the criteria of the aspect",14],[15,"bag!","","Efficiently construct a bag with the given values in"],[15,"entity!","","Create a new entity with the given components in"],[15,"comp!","","Define a component with the given fields and default values"],[15,"aspect!","","Make an aspect from the given filter"],[15,"world!","","Make a world from the given components and processors"],[10,"build_some","","Build multiple entities",12],[10,"run_all","","Process entities with a delta in seconds",13]],"paths":[[1,"EntityRef"],[1,"EntityRefMut"],[1,"World"],[1,"IntervalProcessor"],[1,"Bag"],[1,"Vec"],[1,"Box"],[1,"ComponentType"],[1,"ComponentManager"],[1,"EntityManager"],[1,"ProcessorManager"],[6,"IntoBag"],[6,"EntityBuilder"],[6,"Processor"],[6,"Aspect"]]};
searchIndex['time'] = {"items":[[0,"","time","Simple time handling."],[1,"Timespec","","A record specifying a time value in seconds and nanoseconds."],[11,"sec","","",0],[11,"nsec","","",0],[1,"Tm","","Holds a calendar date and time broken down into its components (year, month, day, and so on),\nalso called a broken-down time value."],[11,"tm_sec","","Seconds after the minute - [0, 60]",1],[11,"tm_min","","Minutes after the hour - [0, 59]",1],[11,"tm_hour","","Hours after midnight - [0, 23]",1],[11,"tm_mday","","Day of the month - [1, 31]",1],[11,"tm_mon","","Months since January - [0, 11]",1],[11,"tm_year","","Years since 1900",1],[11,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1],[11,"tm_yday","","Days since January 1 - [0, 365]",1],[11,"tm_isdst","","Daylight Saving Time flag.",1],[11,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time value, including any\nadjustment for Daylight Saving Time. This is the number of seconds east of UTC. For example,\nfor U.S. Pacific Daylight Time, the value is -7*60*60 = -25200.",1],[11,"tm_nsec","","Nanoseconds after the second - [0, 10<sup>9</sup> - 1]",1],[1,"TmFmt","","A wrapper around a `Tm` and format string that implements Show."],[2,"ParseError","",""],[12,"InvalidSecond","","",2],[12,"InvalidMinute","","",2],[12,"InvalidHour","","",2],[12,"InvalidDay","","",2],[12,"InvalidMonth","","",2],[12,"InvalidYear","","",2],[12,"InvalidDayOfWeek","","",2],[12,"InvalidDayOfMonth","","",2],[12,"InvalidDayOfYear","","",2],[12,"InvalidZoneOffset","","",2],[12,"InvalidTime","","",2],[12,"MissingFormatConverter","","",2],[12,"InvalidFormatSpecifier","","",2],[12,"UnexpectedCharacter","","",2],[3,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z."],[3,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch."],[3,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch."],[3,"tzset","",""],[3,"empty_tm","",""],[3,"at_utc","","Returns the specified time in UTC"],[3,"now_utc","","Returns the current time in UTC"],[3,"at","","Returns the specified time in the local timezone"],[3,"now","","Returns the current time in the local timezone"],[3,"strptime","","Parses the time from the string according to the format string."],[3,"strftime","","Formats the time according to the format string."],[10,"fmt","","",0],[10,"decode","","",0],[10,"encode","","",0],[10,"cmp","","",0],[10,"partial_cmp","","",0],[10,"lt","","",0],[10,"le","","",0],[10,"gt","","",0],[10,"ge","","",0],[10,"eq","","",0],[10,"ne","","",0],[10,"clone","","",0],[10,"new","","",0],[10,"add","","",0],[10,"sub","","",0],[10,"sub","","",0],[10,"fmt","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"clone","","",1],[10,"add","","The resulting Tm is in UTC.",1],[10,"sub","","The resulting Tm is in UTC.",1],[10,"partial_cmp","","",1],[10,"cmp","","",1],[10,"to_timespec","","Convert time to the seconds from January 1, 1970",1],[10,"to_local","","Convert time to the local timezone",1],[10,"to_utc","","Convert time to the UTC",1],[10,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1],[10,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1],[10,"strftime","","Formats the time according to the format string.",1],[10,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1],[10,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1],[10,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1],[10,"eq","","",2],[10,"ne","","",2],[10,"fmt","","",2],[10,"fmt","","",3]],"paths":[[1,"Timespec"],[1,"Tm"],[2,"ParseError"],[1,"TmFmt"]]};

searchIndex['rustc-serialize'] = {"items":[[0,"","rustc-serialize","Support code for encoding and decoding types."],[10,"encode","collections::string","",0],[10,"decode","","",0],[10,"encode","alloc::boxed","",1],[10,"decode","","",1],[10,"decode","","",1],[10,"encode","alloc::rc","",2],[10,"decode","","",2],[10,"encode","collections::vec","",3],[10,"decode","","",3],[10,"encode","core::option","",4],[10,"decode","","",4],[10,"encode","std::path::posix","",5],[10,"decode","","",5],[10,"encode","std::path::windows","",6],[10,"decode","","",6],[10,"encode","core::cell","",7],[10,"decode","","",7],[10,"encode","","",8],[10,"decode","","",8],[10,"encode","alloc::arc","",9],[10,"decode","","",9],[10,"encode","collections::dlist","",10],[10,"decode","","",10],[10,"encode","collections::ring_buf","",11],[10,"decode","","",11],[10,"encode","collections::btree::map","",12],[10,"decode","","",12],[10,"encode","collections::btree::set","",13],[10,"decode","","",13],[10,"encode","collections::enum_set","",14],[10,"decode","","",14],[10,"encode","std::collections::hash::map","",15],[10,"decode","","",15],[10,"encode","std::collections::hash::set","",16],[10,"decode","","",16],[10,"encode","collections::vec_map","",17],[10,"decode","","",17],[0,"base64","rustc-serialize","Base64 binary-to-text encoding"],[1,"Config","rustc-serialize::base64","Contains configuration parameters for `to_base64`."],[11,"char_set","","Character set to use",18],[11,"newline","","Newline to use",18],[11,"pad","","True to pad output with `=` characters",18],[11,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18],[2,"CharacterSet","","Available encoding character sets"],[12,"Standard","","The standard character set (uses `+` and `/`)",19],[12,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19],[2,"Newline","","Available newline types"],[12,"LF","","A linefeed (i.e. Unix-style newline)",20],[12,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20],[2,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string"],[12,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21],[12,"InvalidBase64Length","","The input had an invalid length",21],[5,"STANDARD","","Configuration for RFC 4648 standard base64 encoding"],[5,"URL_SAFE","","Configuration for RFC 4648 base64url encoding"],[5,"MIME","","Configuration for RFC 2045 MIME base64 encoding"],[6,"ToBase64","","A trait for converting a value to base64 encoding."],[9,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22],[6,"FromBase64","","A trait for converting from base64 encoded values."],[9,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23],[10,"fmt","","",21],[10,"description","","",21],[10,"detail","","",21],[0,"hex","rustc-serialize","Hex binary-to-text encoding"],[2,"FromHexError","rustc-serialize::hex","Errors that can occur when decoding a hex encoded string"],[12,"InvalidHexCharacter","","The input contained a character not part of the hex format",24],[12,"InvalidHexLength","","The input had an invalid length",24],[6,"ToHex","","A trait for converting a value to hexadecimal encoding"],[9,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25],[6,"FromHex","","A trait for converting hexadecimal encoded values"],[9,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26],[10,"fmt","","",24],[10,"description","","",24],[10,"detail","","",24],[0,"json","rustc-serialize","JSON parsing and serialization"],[1,"Encoder","rustc-serialize::json","A structure for implementing serialization to JSON."],[1,"PrettyEncoder","","Another encoder for JSON, but prints out human-readable JSON instead of\ncompact data"],[1,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x"],[1,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char."],[1,"Builder","","A Builder consumes a json::Parser to create a generic Json structure."],[1,"Decoder","","A structure to decode JSON to values in rust."],[2,"Json","","Represents a json value"],[12,"I64","","",27],[12,"U64","","",27],[12,"F64","","",27],[12,"String","","",27],[12,"Boolean","","",27],[12,"Array","","",27],[12,"Object","","",27],[12,"Null","","",27],[2,"ErrorCode","","The errors that can arise while parsing a JSON stream."],[12,"InvalidSyntax","","",28],[12,"InvalidNumber","","",28],[12,"EOFWhileParsingObject","","",28],[12,"EOFWhileParsingArray","","",28],[12,"EOFWhileParsingValue","","",28],[12,"EOFWhileParsingString","","",28],[12,"KeyMustBeAString","","",28],[12,"ExpectedColon","","",28],[12,"TrailingCharacters","","",28],[12,"TrailingComma","","",28],[12,"InvalidEscape","","",28],[12,"InvalidUnicodeCodePoint","","",28],[12,"LoneLeadingSurrogateInHexEscape","","",28],[12,"UnexpectedEndOfHexEscape","","",28],[12,"UnrecognizedHex","","",28],[12,"NotFourDigit","","",28],[12,"NotUtf8","","",28],[2,"ParserError","",""],[12,"SyntaxError","","msg, line, col",29],[12,"IoError","","",29],[2,"DecoderError","",""],[12,"ParseError","","",30],[12,"ExpectedError","","",30],[12,"MissingFieldError","","",30],[12,"UnknownVariantError","","",30],[12,"ApplicationError","","",30],[2,"JsonEvent","","The output of the streaming parser."],[12,"ObjectStart","","",31],[12,"ObjectEnd","","",31],[12,"ArrayStart","","",31],[12,"ArrayEnd","","",31],[12,"BooleanValue","","",31],[12,"I64Value","","",31],[12,"U64Value","","",31],[12,"F64Value","","",31],[12,"StringValue","","",31],[12,"NullValue","","",31],[12,"Error","","",31],[2,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x"],[12,"Index","","",32],[12,"Key","","",32],[3,"error_str","","Returns a readable error string for a given error code."],[3,"decode","","Shortcut function to decode a JSON `&str` into an object"],[3,"encode","","Shortcut function to encode a `T` into a JSON `String`"],[3,"escape_bytes","",""],[3,"from_reader","","Decodes a json value from an `&mut io::Reader`"],[3,"from_str","","Decodes a json value from a string"],[4,"Array","",""],[4,"Object","",""],[4,"BuilderError","",""],[4,"EncodeResult","",""],[4,"DecodeResult","",""],[6,"ToJson","","A trait for converting values to JSON"],[9,"to_json","","Converts the value of `self` to an instance of JSON",33],[10,"partial_cmp","","",27],[10,"lt","","",27],[10,"le","","",27],[10,"gt","","",27],[10,"ge","","",27],[10,"eq","","",27],[10,"ne","","",27],[10,"clone","","",27],[10,"eq","","",28],[10,"ne","","",28],[10,"clone","","",28],[10,"fmt","","",29],[10,"eq","","",29],[10,"ne","","",29],[10,"clone","","",29],[10,"fmt","","",30],[10,"eq","","",30],[10,"ne","","",30],[10,"clone","","",30],[10,"fmt","","",28],[10,"description","","",30],[10,"detail","","",30],[10,"new","","Creates a new JSON encoder whose output will be written to the writer\nspecified.",34],[10,"buffer_encode","","Encode the specified struct into a json [u8]",34],[10,"emit_nil","","",34],[10,"emit_uint","","",34],[10,"emit_u64","","",34],[10,"emit_u32","","",34],[10,"emit_u16","","",34],[10,"emit_u8","","",34],[10,"emit_int","","",34],[10,"emit_i64","","",34],[10,"emit_i32","","",34],[10,"emit_i16","","",34],[10,"emit_i8","","",34],[10,"emit_bool","","",34],[10,"emit_f64","","",34],[10,"emit_f32","","",34],[10,"emit_char","","",34],[10,"emit_str","","",34],[10,"emit_enum","","",34],[10,"emit_enum_variant","","",34],[10,"emit_enum_variant_arg","","",34],[10,"emit_enum_struct_variant","","",34],[10,"emit_enum_struct_variant_field","","",34],[10,"emit_struct","","",34],[10,"emit_struct_field","","",34],[10,"emit_tuple","","",34],[10,"emit_tuple_arg","","",34],[10,"emit_tuple_struct","","",34],[10,"emit_tuple_struct_arg","","",34],[10,"emit_option","","",34],[10,"emit_option_none","","",34],[10,"emit_option_some","","",34],[10,"emit_seq","","",34],[10,"emit_seq_elt","","",34],[10,"emit_map","","",34],[10,"emit_map_elt_key","","",34],[10,"emit_map_elt_val","","",34],[10,"new","","Creates a new encoder whose output will be written to the specified writer",35],[10,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35],[10,"emit_nil","","",35],[10,"emit_uint","","",35],[10,"emit_u64","","",35],[10,"emit_u32","","",35],[10,"emit_u16","","",35],[10,"emit_u8","","",35],[10,"emit_int","","",35],[10,"emit_i64","","",35],[10,"emit_i32","","",35],[10,"emit_i16","","",35],[10,"emit_i8","","",35],[10,"emit_bool","","",35],[10,"emit_f64","","",35],[10,"emit_f32","","",35],[10,"emit_char","","",35],[10,"emit_str","","",35],[10,"emit_enum","","",35],[10,"emit_enum_variant","","",35],[10,"emit_enum_variant_arg","","",35],[10,"emit_enum_struct_variant","","",35],[10,"emit_enum_struct_variant_field","","",35],[10,"emit_struct","","",35],[10,"emit_struct_field","","",35],[10,"emit_tuple","","",35],[10,"emit_tuple_arg","","",35],[10,"emit_tuple_struct","","",35],[10,"emit_tuple_struct_arg","","",35],[10,"emit_option","","",35],[10,"emit_option_none","","",35],[10,"emit_option_some","","",35],[10,"emit_seq","","",35],[10,"emit_seq_elt","","",35],[10,"emit_map","","",35],[10,"emit_map_elt_key","","",35],[10,"emit_map_elt_val","","",35],[10,"encode","","",27],[10,"to_writer","","Encodes a json value into an io::writer. Uses a single line.",27],[10,"to_pretty_writer","","Encodes a json value into an io::writer.\nPretty-prints in a more readable format.",27],[10,"to_pretty_str","","Encodes a json value into a string",27],[10,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27],[10,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27],[10,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27],[10,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27],[10,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27],[10,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27],[10,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27],[10,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27],[10,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27],[10,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27],[10,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27],[10,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27],[10,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27],[10,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27],[10,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27],[10,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27],[10,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27],[10,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27],[10,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27],[10,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27],[10,"index","","",27],[10,"index","","",27],[10,"fmt","","",31],[10,"clone","","",31],[10,"eq","","",31],[10,"ne","","",31],[10,"fmt","","",32],[10,"clone","","",32],[10,"eq","","",32],[10,"ne","","",32],[10,"new","","",36],[10,"len","","Returns The number of elements in the Stack.",36],[10,"is_empty","","Returns true if the stack is empty.",36],[10,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36],[10,"is_equal_to","","Compares this stack with an array of StackElements.",36],[10,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36],[10,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36],[10,"top","","Returns the top-most element (if any).",36],[10,"next","","",37],[10,"new","","Creates the JSON parser.",37],[10,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37],[10,"new","","Create a JSON Builder.",38],[10,"build","","",38],[10,"new","","Creates a new decoder instance for decoding the specified JSON value.",39],[10,"read_nil","","",39],[10,"read_uint","","",39],[10,"read_u8","","",39],[10,"read_u16","","",39],[10,"read_u32","","",39],[10,"read_u64","","",39],[10,"read_int","","",39],[10,"read_i8","","",39],[10,"read_i16","","",39],[10,"read_i32","","",39],[10,"read_i64","","",39],[10,"read_f32","","",39],[10,"read_f64","","",39],[10,"read_bool","","",39],[10,"read_char","","",39],[10,"read_str","","",39],[10,"read_enum","","",39],[10,"read_enum_variant","","",39],[10,"read_enum_variant_arg","","",39],[10,"read_enum_struct_variant","","",39],[10,"read_enum_struct_variant_field","","",39],[10,"read_struct","","",39],[10,"read_struct_field","","",39],[10,"read_tuple","","",39],[10,"read_tuple_arg","","",39],[10,"read_tuple_struct","","",39],[10,"read_tuple_struct_arg","","",39],[10,"read_option","","",39],[10,"read_seq","","",39],[10,"read_seq_elt","","",39],[10,"read_map","","",39],[10,"read_map_elt_key","","",39],[10,"read_map_elt_val","","",39],[10,"error","","",39],[10,"to_json","","",27],[10,"to_json","collections::string","",0],[10,"to_json","collections::vec","",3],[10,"to_json","collections::btree::map","",12],[10,"to_json","std::collections::hash::map","",15],[10,"to_json","core::option","",4],[10,"fmt","rustc-serialize::json","Encodes a json value into a string",27],[10,"from_str","","",27],[10,"encode","collections::string","",0],[10,"decode","","",0],[10,"encode","alloc::boxed","",1],[10,"decode","","",1],[10,"decode","","",1],[10,"encode","alloc::rc","",2],[10,"decode","","",2],[10,"encode","collections::vec","",3],[10,"decode","","",3],[10,"encode","core::option","",4],[10,"decode","","",4],[10,"encode","std::path::posix","",5],[10,"decode","","",5],[10,"encode","std::path::windows","",6],[10,"decode","","",6],[10,"encode","core::cell","",7],[10,"decode","","",7],[10,"encode","","",8],[10,"decode","","",8],[10,"encode","alloc::arc","",9],[10,"decode","","",9],[6,"Decoder","rustc-serialize",""],[9,"read_nil","","",40],[9,"read_uint","","",40],[9,"read_u64","","",40],[9,"read_u32","","",40],[9,"read_u16","","",40],[9,"read_u8","","",40],[9,"read_int","","",40],[9,"read_i64","","",40],[9,"read_i32","","",40],[9,"read_i16","","",40],[9,"read_i8","","",40],[9,"read_bool","","",40],[9,"read_f64","","",40],[9,"read_f32","","",40],[9,"read_char","","",40],[9,"read_str","","",40],[9,"read_enum","","",40],[9,"read_enum_variant","","",40],[9,"read_enum_variant_arg","","",40],[9,"read_enum_struct_variant","","",40],[9,"read_enum_struct_variant_field","","",40],[9,"read_struct","","",40],[9,"read_struct_field","","",40],[9,"read_tuple","","",40],[9,"read_tuple_arg","","",40],[9,"read_tuple_struct","","",40],[9,"read_tuple_struct_arg","","",40],[9,"read_option","","",40],[9,"read_seq","","",40],[9,"read_seq_elt","","",40],[9,"read_map","","",40],[9,"read_map_elt_key","","",40],[9,"read_map_elt_val","","",40],[9,"error","","",40],[6,"Encoder","",""],[9,"emit_nil","","",41],[9,"emit_uint","","",41],[9,"emit_u64","","",41],[9,"emit_u32","","",41],[9,"emit_u16","","",41],[9,"emit_u8","","",41],[9,"emit_int","","",41],[9,"emit_i64","","",41],[9,"emit_i32","","",41],[9,"emit_i16","","",41],[9,"emit_i8","","",41],[9,"emit_bool","","",41],[9,"emit_f64","","",41],[9,"emit_f32","","",41],[9,"emit_char","","",41],[9,"emit_str","","",41],[9,"emit_enum","","",41],[9,"emit_enum_variant","","",41],[9,"emit_enum_variant_arg","","",41],[9,"emit_enum_struct_variant","","",41],[9,"emit_enum_struct_variant_field","","",41],[9,"emit_struct","","",41],[9,"emit_struct_field","","",41],[9,"emit_tuple","","",41],[9,"emit_tuple_arg","","",41],[9,"emit_tuple_struct","","",41],[9,"emit_tuple_struct_arg","","",41],[9,"emit_option","","",41],[9,"emit_option_none","","",41],[9,"emit_option_some","","",41],[9,"emit_seq","","",41],[9,"emit_seq_elt","","",41],[9,"emit_map","","",41],[9,"emit_map_elt_key","","",41],[9,"emit_map_elt_val","","",41],[6,"Decodable","",""],[9,"decode","","",42],[6,"Encodable","",""],[9,"encode","","",43],[6,"DecoderHelpers","",""],[9,"read_to_vec","","",44],[6,"EncoderHelpers","",""],[9,"emit_from_vec","","",45]],"paths":[[1,"String"],[1,"Box"],[1,"Rc"],[1,"Vec"],[2,"Option"],[1,"Path"],[1,"Path"],[1,"Cell"],[1,"RefCell"],[1,"Arc"],[1,"DList"],[1,"RingBuf"],[1,"BTreeMap"],[1,"BTreeSet"],[1,"EnumSet"],[1,"HashMap"],[1,"HashSet"],[1,"VecMap"],[1,"Config"],[2,"CharacterSet"],[2,"Newline"],[2,"FromBase64Error"],[6,"ToBase64"],[6,"FromBase64"],[2,"FromHexError"],[6,"ToHex"],[6,"FromHex"],[2,"Json"],[2,"ErrorCode"],[2,"ParserError"],[2,"DecoderError"],[2,"JsonEvent"],[2,"StackElement"],[6,"ToJson"],[1,"Encoder"],[1,"PrettyEncoder"],[1,"Stack"],[1,"Parser"],[1,"Builder"],[1,"Decoder"],[6,"Decoder"],[6,"Encoder"],[6,"Decodable"],[6,"Encodable"],[6,"DecoderHelpers"],[6,"EncoderHelpers"]]};

searchIndex['log'] = {"items":[[0,"","log","Utilities for program-wide and customizable logging"],[1,"LogLevel","","Wraps the log level with fmt implementations."],[1,"LogRecord","","A LogRecord is created by the logging macros, and passed as the only\nargument to Loggers."],[11,"module_path","","The module path of where the LogRecord originated.",0],[11,"level","","The LogLevel of this record.",0],[11,"args","","The arguments from the log line.",0],[11,"file","","The file of where the LogRecord originated.",0],[11,"line","","The line number of where the LogRecord originated.",0],[3,"set_logger","","Replaces the task-local logger with the specified logger, returning the old\nlogger."],[0,"macros","","Logging macros"],[18,"MAX_LOG_LEVEL","","Maximum logging level of a module that can be specified. Common logging\nlevels are found in the DEBUG/INFO/WARN/ERROR constants."],[18,"DEBUG","","Debug log level"],[18,"INFO","","Info log level"],[18,"WARN","","Warn log level"],[18,"ERROR","","Error log level"],[6,"Logger","","A trait used to represent an interface to a task-local logger. Each task\ncan have its own custom logger which can respond to logging messages\nhowever it likes."],[9,"log","","Logs a single message described by the `record`.",1],[10,"partial_cmp","","",2],[10,"lt","","",2],[10,"le","","",2],[10,"gt","","",2],[10,"ge","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"fmt","","",2],[10,"fmt","","",0],[15,"log!","","The standard logging macro"],[15,"error!","","A convenience macro for logging at the error log level."],[15,"warn!","","A convenience macro for logging at the warning log level."],[15,"info!","","A convenience macro for logging at the info log level."],[15,"debug!","","A convenience macro for logging at the debug log level. This macro can also\nbe omitted at compile time by passing `--cfg ndebug` to the compiler. If\nthis option is not passed, then debug statements will be compiled."],[15,"log_enabled!","","A macro to test whether a log level is enabled for the current module."]],"paths":[[1,"LogRecord"],[6,"Logger"],[1,"LogLevel"]]};

searchIndex['regex'] = {"items":[[0,"","regex","This crate provides a native implementation of regular expressions that is\nheavily based on RE2 both in syntax and in implementation. Notably,\nbackreferences and arbitrary lookahead/lookbehind assertions are not\nprovided. In return, regular expression searching provided by this package\nhas excellent worst case performance. The specific syntax supported is\ndocumented further down."],[1,"Error","","Error corresponds to something that can go wrong while parsing\na regular expression."],[11,"pos","","The *approximate* character index of where the error occurred.",0],[11,"msg","","A message describing the error.",0],[1,"Captures","","Captures represents a group of captured strings for a single match."],[1,"SubCaptures","","An iterator over capture groups for a particular match of a regular\nexpression."],[1,"SubCapturesPos","","An iterator over capture group positions for a particular match of a\nregular expression."],[1,"FindCaptures","","An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression."],[1,"FindMatches","","An iterator over all non-overlapping matches for a particular string."],[1,"NoExpand","","NoExpand indicates literal string replacement."],[1,"RegexSplits","","Yields all substrings delimited by a regular expression match."],[1,"RegexSplitsN","","Yields at most `N` substrings delimited by a regular expression match."],[2,"Regex","","A compiled regular expression"],[3,"quote","","Escapes all regular expression meta characters in `text`."],[3,"is_match","","Tests if the given regular expression matches somewhere in the text given."],[10,"fmt","","",0],[10,"clone","","",1],[10,"fmt","","Shows the original regular expression.",1],[10,"new","","Compiles a dynamic regular expression. Once compiled, it can be\nused repeatedly to search, split or replace text in a string.",1],[10,"is_match","","Returns true if and only if the regex matches the string given.",1],[10,"find","","Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.",1],[10,"find_iter","","Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.",1],[10,"captures","","Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.",1],[10,"captures_iter","","Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter` (except it\nyields information about submatches).",1],[10,"split","","Returns an iterator of substrings of `text` delimited by a match\nof the regular expression.\nNamely, each element of the iterator corresponds to text that *isn't*\nmatched by the regular expression.",1],[10,"splitn","","Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.)\nNamely, each element of the iterator corresponds to text that *isn't*\nmatched by the regular expression.\nThe remainder of the string that is not split will be the last element\nin the iterator.",1],[10,"replace","","Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced string.",1],[10,"replace_all","","Replaces all non-overlapping matches in `text` with the\nreplacement provided. This is the same as calling `replacen` with\n`limit` set to `0`.",1],[10,"replacen","","Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.",1],[10,"as_str","","Returns the original string of this regex.",1],[10,"reg_replace","","",2],[10,"next","","",3],[10,"next","","",4],[10,"pos","","Returns the start and end positions of the Nth capture group.\nReturns `None` if `i` is not a valid capture group or if the capture\ngroup did not match anything.\nThe positions returned are *always* byte indices with respect to the\noriginal string matched.",5],[10,"at","","Returns the matched string for the capture group `i`.  If `i` isn't\na valid capture group or didn't match anything, then `None` is\nreturned.",5],[10,"name","","Returns the matched string for the capture group named `name`.  If\n`name` isn't a valid capture group or didn't match anything, then\n`None` is returned.",5],[10,"iter","","Creates an iterator of all the capture groups in order of appearance\nin the regular expression.",5],[10,"iter_pos","","Creates an iterator of all the capture group positions in order of\nappearance in the regular expression. Positions are byte indices\nin terms of the original string matched.",5],[10,"expand","","Expands all instances of `$name` in `text` to the corresponding capture\ngroup `name`.",5],[10,"len","","Returns the number of captured groups.",5],[10,"is_empty","","Returns if there are no captured groups.",5],[10,"next","","",6],[10,"next","","",7],[10,"next","","",8],[10,"next","","",9],[6,"Replacer","","Replacer describes types that can be used to replace matches in a string."],[9,"reg_replace","","Returns a possibly owned string that is used to replace the match\ncorresponding to the `caps` capture group.",10]],"paths":[[1,"Error"],[2,"Regex"],[1,"NoExpand"],[1,"RegexSplits"],[1,"RegexSplitsN"],[1,"Captures"],[1,"SubCaptures"],[1,"SubCapturesPos"],[1,"FindCaptures"],[1,"FindMatches"],[6,"Replacer"]]};

searchIndex['gcc'] = {"items":[[0,"","gcc",""],[1,"Config","","Extra configuration to pass to gcc."],[11,"include_directories","","Directories where gcc will look for header files.",0],[11,"definitions","","Additional definitions (`-DKEY` or `-DKEY=VALUE`).",0],[11,"objects","","Additional object files to link into the final archive",0],[11,"flags","","Additional flags and parameter to pass to the compiler",0],[3,"compile_library","","Compile a library from the given set of input C files."],[10,"default","","",0]],"paths":[[1,"Config"]]};

initSearch(searchIndex);
